<html>
<head>
<STYLE TYPE="text/css"><!--
A:link {color: lightred; text-decoration:none; font}
A:visited {color: lightred; text-decoration:none; font}
A:active {text-decoration:none; color=#ff0000}
A:hover {text-decoration: underline; font}
--></STYLE>
</head>
<body background="../im/ugolok-fon.gif" bgcolor=#fffffe text=#003300 link=#000066 vlink=#660000>
<centeR>
<a target=_top href="http://www.aec.neva.ru/internet-school/"><img src=../im/address2.gif border=0 width=255 heighT=16></a>
<table width=100% cellspacing="0" cellpadding="0" border=0 bgcolor=#ffffff>
<tr>
<td windth=13><img src=../im/ugolok1.gif width=13 height=13></td>
<td windth=99%><img src=../im/blanck.gif width=554 height=13></td>
<td windth=13 align=right><img src=../im/ugolok2.gif width=13 height=13></td>
</tr><tr>
<td windth=13><img src=../im/blanck.gif width=1 height=13></td>
<td windth=99% align=center>
<font size=+2><b>

Памятка учащемуся

</b></font>
</td>
<td windth=13><img src=../im/blanck.gif width=1 height=13></td>
</tr><tr>
<td windth=13><img src=../im/ugolok4.gif width=13 height=13></td>
<td windth=99%><img src=../im/blanck.gif width=1 height=13></td>
<td windth=13 align=right><img src=../im/ugolok3.gif width=13 height=13></td>
</tr></table>
</center>
<br>

<centeR>
<table width=100% cellspacing="0" cellpadding="0" border=0 bgcolor=#ffffff>
<tr>
<td windth=13><img src=../im/ugolok1.gif width=13 height=13></td>
<td windth=99%><img src=../im/blanck.gif width=554 height=13></td>
<td windth=13 align=right><img src=../im/ugolok2.gif width=13 height=13></td>
</tr><tr>
<td windth=13><img src=../im/blanck.gif width=1 height=13></td>
<td windth=99%><br>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Обучение искусству программирования требует изучения таких дисциплин, 
как логика, дискретная математика, прикладная теория алгоритмов и другие,
которым в школьном курсе уделяется  совсем немного времени, а во многих школах 
их не изучают вовсе. Школа современного программирования ставит своей целью 
восполнить этот пробел, а также приобщить школьников, интересующихся профессией 
программиста, к решению содержательных задач по программированию. Предполагается,
что в школе будут обучаться как те ребята, которые владеют теми или иными языками 
программирования, так и те, которые не имеют о них пока никакого представления.<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
В соответствии с этим, в школу принимаются ребята 7-11 классов, а предлагаемые 
задачи имеют два уровня:
<li> первый уровень рассчитан на тех, кто не изучает алгоритмические языки;
решение этих заданий записывается в виде текстового файла в формате ASCII или аккуратно на бумаге;
<li> второй уровень предназначен для умеющих программировать; решения заданий второго уровня представляются в виде исполнимых exe-файлов (точный формат входных и выходных данных указывается в условии задачи). 
<p>
В процессе обучения нужно будет решать много задач, различных по трудности. 
Задачи в своем большинстве будут носить исследовательский характер.
Задания будут высылаться по электронной или обычной почте. 
На решение предлагаемых задач отводится один месяц.
Решения будут приниматься на дискетах и в письменном виде
(по адресу: Санкт-Петербург, Марата 25, 
Заочная школа современного программирования,
тел. для справок (812) 164-1355) и
по электронной почте (<a href="mailto:school@ipo.spb.ru">school@ipo.spb.ru</a>). 
Обращаем внимание, что участниками школы могут быть как отдельные школьники, 
так и коллективы (классы, кружки и прочее). Мы будем благодарны всем, 
кто сообщит нам о проблемах и предложениях, возникших в процессе выполнения 
заданий и пересылки решений.

<br><br>
<center><font size="+1">
 <b>Рекомендации и условия, которым должны удовлетворять присылаемые решения</b>
</font></center>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1. Перед решением задач прочтите лекцию и разберите примеры в ней.
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
2. Приступая к решению задач, помните, что предложенные задачи не обязывают вас использовать только материал соответствующего занятия. У задачи может быть несколько разных хороших решений. Могут предлагаться также задачи не по теме - на сообразительность.
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
3. Теоретические решения (уровень 1) требуют не просто "голого ответа", а объяснений, обоснований и доказательств. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
4. Программы (уровень 2) проверяются автоматической системой тестирования, 
поэтому необходимо точно следовать указанным в условиях форматам ввода/вывода, 
а также указанным ниже правилам (примечание: те, кто не может прислать решения 
в электронном виде, присылают подробно и аккуратно оформленные решения на 
бумаге).
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
- Все программы должны быть скомпилированы под DOS (принимаются <b>.exe</b> файлы). 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
- Для ввода/вывода допустимы следующие варианты:
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
(1) Вводить информацию из текстового файла <b>in.txt</b> и выводить результат в файл <b>out.txt</b>; 
никаких других файлов программа использовать не должна, если это особо не 
оговорено в условии. <i>Этот вариант наиболее предпочтительный.</i>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
(2) Вводить информацию из текстового файла <b>input.txt</b> и выводить результат в файл <b>output.txt</b> 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
(3) Использовать стандартный ввод/вывод. Для <b>Pascal</b> это процедуры <b>read/readln</b> 
и <b>write/writeln</b>, для <b>C/C++</b> - функции <b>scanf</b>,<b>printf</b> или объекты <b>cin</b> и <b>cout</b>,
для <b>Бейсика</b> - операторы <b>INPUT</b> и <b>PRINT</b>. 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
- Названия исполнимых файлов с программой могут быть следующими:
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
(1) <i><первые три буквы фамилии><font color="red">
<b>_</b></font><двузначный номер занятия><двузначный номер задачи><font color="red"><b>.exe</b></font></i>
<br>Например, pet_0212.exe, sid_0102.exe;
<i>Этот вариант наиболее предпочтительный.</i>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
(2) <i><первые три буквы фамилии><двузначный номер занятия><двузначный номер задачи><font color="red"><b>.exe</b></font></i>
<br>Например, pet0212.exe (двенадцатая задача второго занятия), 
sid0102.exe (вторая задача первого занятия);
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
(3) <i><первые&nbsp;три&nbsp;буквы&nbsp;фамилии><font color="red">
<b>_</b></font><задача><font color="red"><b>.exe</b></font></i> 
(Отдельно следует указать номер занятия)
<br>Например, pet_2.exe, sid_3.exe.
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
5. Все тексты должны быть набраны в формате ASCII, кодировке DOS.
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
6. Тексты программ, возможно, будут читаться проверяющими, 
поэтому используйте поясняющие комментарии и уделяйте внимание 
структуре программы, а также названиям идентификаторов.
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
7. Если вы не можете прислать решения в электронном виде, присылайте подробно и 
аккуратно оформленные решения на бумаге. Если вы пишете программу на бумаге, 
то перед этим следует словами описать алгоритм решения.
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
8. Решения принимаются на дискетах, в письменном виде и по электронной почте.

<br>&nbsp;</td>
<td windth=13><img src=../im/blanck.gif width=1 height=13></td>
</tr><tr>
<td windth=13><img src=../im/ugolok4.gif width=13 height=13></td>
<td windth=99%><img src=../im/blanck.gif width=1 height=13></td>
<td windth=13 align=right><img src=../im/ugolok3.gif width=13 height=13></td>
</tr></table>
<a target=_top href="http://www.aec.neva.ru/center/"><img src=../im/address.gif border=0 width=135 heighT=18></a>
</center>


</body></html>