<HTML>
<HEAD>
        <TITLE> Журнал ЦПО. Дистанционное обучение. </TITLE>
        <META NAME="Author" CONTENT="Olga Pavlova (OP), CHANCE Publishing House">
</HEAD>

<BODY BGCOLOR="#EFEFEF" TEXT="Black" LINK="Teal" VLINK="Gray" ALINK="#B3CFC4">


<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="0">
<TR>
        <TD width=2% ROWSPAN="2" BGCOLOR="#82B496">&nbsp;</TD>
        <TD width=2% ROWSPAN="2" BGCOLOR="Black">&nbsp;</TD>
        <TD ALIGN="CENTER" BGCOLOR="Gray">
        <FONT COLOR="White">
        <EM>Компьютерные</EM><BR>
        <FONT SIZE="+1"><STRONG>ИНСТРУМЕНТЫ</STRONG></FONT><BR>
        <EM>в образовании</EM>
        </FONT>
        </TD>
        <TD width=2% ROWSPAN="2" BGCOLOR="Black">&nbsp;</TD>
        <TD width=2% ROWSPAN="2" BGCOLOR="#82B496">&nbsp;</TD>
</TR>
<TR>
<TD BGCOLOR="Black">&nbsp;</TD>
</TR>
<TR>
<TD COLSPAN="5" ALIGN="CENTER" VALIGN="MIDDLE" BGCOLOR="#82B496">
<FONT SIZE="-1">
<HR SIZE="1" NOSHADE>
[ <A HREF="index.htm">начало</A> ] [ <A HREF="http://www.aec.neva.ru/center/">ЦПО</A> ] [ <A HREF="mailto:pozdnkov@aec.neva.ru">e-mail</A> ] 
<HR SIZE="1" NOSHADE>
</FONT>
</TD>
</TR>
</TABLE>
<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="0" ALIGN="CENTER" VALIGN="MIDDLE" NOWRAP BGCOLOR="#82B496">
<TR>
<TD WIDTH="30%" ALIGN="CENTER" VALIGN="MIDDLE"><FONT COLOR="White" SIZE="+2">

<EM>&nbsp;  


Учебная мастерская


&nbsp;</EM></FONT></TD><TD WIDTH="70%" BGCOLOR="#EFEFEF"><P ALIGN="RIGHT"><FONT SIZE="-1"><EM>


Б.&nbsp;Кулик

</EM></FONT></P><H3 ALIGN="CENTER">


Программа для моделирования и анализа естественных рассуждений


</H3>&nbsp;</TD></TR></TABLE>





<!-- --- --- -->
<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#82B496">
<TR><TD COLSPAN="2" align=center><font size="+1" color=white>Введение </font></TD></TR></TABLE>
<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#82B496">
<TR><TD WIDTH="97%" BGCOLOR="#EFEFEF"><BLOCKQUOTE><P>&nbsp;<p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;В процессе работы над своей книгой [1] у меня возникла необходимость быстро и точно просчитывать многочисленные, приведенные в ней примеры рассуждений. А поскольку среди компьютерных приложений логики мне не удалось найти метода, о котором рассказывается в этой книге, то пришлось самому заняться составлением такой программы. Работа оказалась нелегкой, но ее результаты окупились сторицей - появилась возможность не только значительно ускорить процесс анализа рассуждений, но и найти новые закономерности общей математической модели рассуждений, которые пополнили книгу.
<p>&nbsp;&nbsp;&nbsp;&nbsp;При работе над составлением программы основное внимание я уделял алгоритмике метода и не особенно заботился о пользовательском интерфейсе. В таком "нетоварном" виде я стал распространять эту программу в качестве бесплатного приложения к своей книге. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;После выхода книги в свет я неожиданно для себя узнал, что некоторые преподаватели ВУЗов начали использовать эту программу для проведения лабораторных занятий со студентами. Суть занятий состояла в следующем: давалось краткое введение в изложенную в книге методику моделирования и анализа рассуждений вместе с показом программы, а затем студентам предлагалось составить множество посылок на произвольную тему и осуществить анализ этих посылок с помощью программы. Результаты таких занятий в виде отчетов студентов мне любезно показал профессор Е.Д.Соложенцев. Он же сообщил мне, что многие студенты проявили большой интерес к этим занятиям. Но, просматривая эти работы, я обнаружил, что в них используются далеко не все возможности метода. Возможно, это объясняется тем, что в книге они были изложены недостаточно четко и, кроме того, сама программа не позволяла в полной мере реализовать эти возможности. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Все это и заставило меня заняться детальной проработкой основ теории и заодно внести существенные добавления в программу. Однако у меня не хватило ни знаний по программированию, ни времени на улучшение пользовательского интерфейса, поэтому я вынужден принести извинения читателям журнала за "нетоварный" вид программы. Но, как говорят, "нет худа без добра" - для реализации этой программы вполне достаточны возможности самых дешевых компьютеров типа IBM PC в среде MS DOS без расширенной памяти. Программа разрабатывалась в среде Турбо Паскаль 6.0. 


</BLOCKQUOTE><P>&nbsp;</TD><TD WIDTH="3%">&nbsp;</TD></TR></TABLE>





<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#82B496">
<TR><TD COLSPAN="2" align=center>&nbsp;<font size="+1" color=white>
ОСОБЕННОСТИ РАБОТЫ ПРОГРАММЫ </font></TD></TR></TABLE>
<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#82B496">
<TR><TD WIDTH="3%">&nbsp;</TD>
<TD WIDTH="97%" BGCOLOR="#EFEFEF"><BLOCKQUOTE><P>&nbsp;<p>


<ol>
        <li> Программа представлена в варианте для DOS с упрощенным экранным интерфейсом в текстовом режиме; 
<p>     <li> Программа записывает в дисковую память и считывает с нее систему исходных посылок. Протокол работы программы выводится на экран. По желанию пользователя он может быть выведен на печатающее устройство или записан в текстовом файле. 
<p>     <li> Все исходные задачи (с расширением LOG) и протоколы сеансов работы с задачами (с расширением TXT) записываются в подкаталоге TASKS. 
<p>     <li> Программа не предназначена для работы с "натуральными" терминами и понятиями. Прежде чем начинать работать с программой, необходимо термины и понятия анализируемой системы рассуждений закодировать числами. Правила "кодирования" изложены ниже. 
<p>     <li> Программа позволяет работать с системами, в которых содержится не более 100 "позитивных" терминов - это не так уж и мало, если учесть, что в составе любого из известных и до сих пор еще не объясненных окончательно парадоксов содержится не более 10 терминов. Данная программа позволяет произвести анализ любого из известных парадоксов. 
<p>     <li> В каталоге TASKS содержится несколько модельных задач с числом "позитивных" терминов от 5 до 24-х. В меню предусматривается возможность загрузки любой из этих задач. Можно составить также свою задачу и записать ее в каталог с выбранным именем. 
<p>     <li> Программа составлена в среде Турбо Паскаль 6.0. 
</ol>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Для инсталляции программы достаточно переписать ее в любой каталог любого IBM-совместимого компьютера вместе с подкаталогом TASKS. 


</BLOCKQUOTE><P>&nbsp;</TD></TR></TABLE>





<!-- --- --- -->
<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#82B496">
<TR><TD COLSPAN="2" align=center>&nbsp;<font size="+1" color=white>ПРИМЕРЫ НОРМАЛЬНЫХ СИСТЕМ </font></TD></TR></TABLE>
<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#82B496">
<TR><TD WIDTH="97%" BGCOLOR="#EFEFEF"><BLOCKQUOTE><P>&nbsp;<p>

<font size="+1"><b>Пример 1. </b></font><p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Предположим, что нам нужно проанализировать следующие посылки: 
<ol>
        <li> Все друзья Сидорова любят прихвастнуть. 
        <li> Тот, кто хвастается, не уверен в себе. 
        <li> Уверенные в себе люди - не скандалисты. 
</ol>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Прежде, чем вводить эти посылки в машину, надо немного поработать с карандашом и бумагой. Во-первых, нужно определить "возможный мир". В данном случае очевидно, что речь идет о каком-то множестве людей. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Во-вторых, выделим сформулированные в посылках составные части этого "возможного мира" и введем для них соответствующие обозначения. В нашем примере это можно сделать сравнительно легко: 
<ul>
        <li> друзья Сидорова (A1), 
        <li> все, кто хвастается (A2), 
        <li> все уверенные в себе (A3), 
        <li> потенциальные скандалисты (A4). 
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Здесь выделены только "позитивные" термины, то есть термины без отрицания. Само собой разумеется, что для каждого "позитивного" термина должна присутствовать его антитеза, в частности: 
<ul>
        <li> не друзья Сидорова (-A1), 
        <li> все, кто не хвастается (-A2), 
        <li> все неуверенные в себе (-A3), 
        <li> не скандалисты (-A4). 
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Для простоты мы будем использовать знак "минус" (-) для обозначения отрицания. Кроме того, чтобы не вводить лишних символов, мы, вместо указанных обозначений терминов, будем вводить просто числа с отрицанием или без него: термин A2 будет у нас обозначен как 2, а термин с отрицанием -A4 - просто как отрицательное число (-4). Тогда наши исходные посылки приобретут следующий вид: 
<ul>
        <li> 1 --> 2; 
        <li> 2 --> -3; 
        <li> 3 --> -4. 
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Теперь можно запустить программу. Ответив на несколько вопросов относительно необходимости фиксации протокола в файле или на принтере, перейдем к ответу на основные вопросы. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Нам будет предложено выбрать задачу из базы данных или составить ее самому. Выберем последнее. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Следующий вопрос: Сколько "позитивных" терминов необходимо для посылок? Тут все ясно. Отвечаем: 4. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Сколько посылок Вы собираетесь вводить? 
<br>&nbsp;&nbsp;&nbsp;&nbsp;Тут тоже все ясно. Отвечаем: 3. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Далее следует такой диалог, в котором нам необходимо только ввести соответствующие положительные или отрицательные числа: 
<br>
<pre>
                   ПОСЫЛКА N 1: 
        ЛЕВАЯ часть: 1 
        ПРАВАЯ часть: 2 
                   ПОСЫЛКА N 2: 
        ЛЕВАЯ часть: 2 
        ПРАВАЯ часть -3 
                   ПОСЫЛКА N 3: 
        ЛЕВАЯ часть: 3 
        ПРАВАЯ часть -4.
</pre>
        
<p>&nbsp;&nbsp;&nbsp;&nbsp;Мы не будем подробно рассматривать эту часть диалога. Отметим только, что наши посылки могут иметь и более сложный вид. Например, такой: 2,-3 --> 1,-4,5. Тогда эту посылку можно ввести так: 
<pre>
        ЛЕВАЯ часть: 2,-3 
        ПРАВАЯ часть: 1,-4,5
</pre>
При этом надо правильно расставлять знаки и использовать в качестве разделителя между "терминами" только запятые. 
Перейдем к нашей задаче. После ввода посылок мы увидим на экране следующий ответ: 

<pre>
    ИСХОДНЫЕ ПОСЫЛКИ:
        1 --> {2} 
        2 --> {-3} 
        3 --> {-4} 

    Система не содержит коллизий. 
</pre>

<p>&nbsp;&nbsp;&nbsp;&nbsp;СПИСОК ПОЛУЧЕННЫХ СЛЕДСТВИЙ: 
<ul>
        <li>1 --> {-3} 
        <li>-2 --> {-1} 
        <li>3 --> {-1,-2} 
        <li>4 --> {-3} 
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp;О коллизиях мы поговорим позже. А сейчас попробуем расшифровать следствия: 
<ul>
        <li>1 --> {-3}: Все друзья Сидорова не уверены в себе. 
        <li>-2 --> {-1}: Все, кто не хвастается, не друзья Сидорова. 
        <li>3 --> {-1,-2}: Все уверенные в себе не относятся к друзьям Сидорова и не хвастаются. 
        <li>4 --> {-3}: Все скандалисты не уверены в себе. 
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Можно считать, что система, приняв исходные посылки в качестве аксиом, вывела из этих "аксиом" все возможные "теоремы". Но программа на этом не успокаивается и задает нам новые вопросы: 
<pre>   Будем проверять полноту системы (Y/N)? </pre>
<p>&nbsp;&nbsp;&nbsp;&nbsp;А почему бы не проверить? Нажмем "y" и получим ответ: 
<pre>
        Система НЕПОЛНА. В нее можно ввести
        по отдельности следующее множество
        элементарных предложений: 
         1 --> {4,-4} 
        -1 --> {-4} 
         2 --> {4,-4} 
        -2 --> {-4} 
         4 --> {1,-1,2,-2} 
        -4 --> {-1,-2}</pre> 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Вот тебе раз! А мы-то думали, что выжали из этой простенькой задачи все, что можно! 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Сначала по поводу термина "элементарные предложения". Это предложения, в котором в левой и правой части содержится по одному термину. Так что в первой строке выведено два элементарных предложения 1--> 4 и 1 --> -4. А в пятой строке их содержится 4 штуки. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Эти "дополнительные" элементарные предложения обладают одной особенностью: если мы любое из них введем в нашу систему рассуждений в виде дополнительной посылки, то от этого в системе не произойдет никаких неприятностей. Но если мы введем сразу несколько предложений, то такие неприятности могут произойти. Разговор об этих "неприятностях" (точнее, коллизиях) мы немного отложим, а сейчас пойдем дальше. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Рассмотрим первую пару "дополнительных" предложений, то есть переведем их на нормальный язык. Получим: 1) "Все друзья Сидорова скандалисты" и 2) "Все друзья Сидорова не скандалисты". Возможно, что какое-то из этих утверждений соответствует действительности. Если Сидоров утверждает, что верно второе предложение, то мы можем в новом сеансе работы с программой ввести это предложение в нашу систему в виде новой посылки. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Но Сидоров может усомниться и в том и в другом предложении. Он может сказать, например: "Кажется, только некоторые из моих друзей не скандалисты". Оказывается, и в этом случае можно внести больше ясности в систему. Для этого введем новый термин A5 - "некоторые люди" и отобразим возможное высказывание Сидорова в виде "машинного" предложения 5 --> {1,-4}. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Возьмем это на заметку, а пока что продолжим работу с программой. Следующий вопрос к нам: "Хотите вывести совместно все посылки и следствия?". Если ответим "y", то получим следующий ответ: 
<pre>   СТ-ЗАМЫКАНИЕ СИСТЕМЫ:
         1 --> {2,-3} 
        -1 --> {} 
         2 --> {-3} 
        -2 --> {-1} 
         3 --> {-1,-2,-4} 
        -3 --> {} 
         4 --> {-3} 
        -4 --> {}</pre> 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Здесь собраны вместе и исходные посылки и следствия. Все это названо "CT-замыканием". Происхождение названия нам сейчас знать необязательно. Просто запомним его. Важно лишь знать, что эти строчки являются одним из способов математического описания ориентированных графов. Чтобы отобразить этот граф на рисунке, надо произвольно нанести на листе бумаги точки, в каждой из которых будет какой-то термин или его отрицание, обозначить эти точки и соединить их линиями со стрелками в соответствии с нашим CT-замыканием. Но мы для большей ясности сначала построим граф исходных посылок (рис. 1). Если дополним этот граф следствиями, то получим граф CT-замыкания нашей системы (рис. 2). 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Такие изображения, когда число терминов в системе невелико, могут послужить нам для структурного анализа полученной системы. Но при большом числе терминов это весьма затруднительно. Поэтому в программе предлагается воспользоваться более простым изображением системы, которая называется "диаграммой Хассе". В диаграмме Хассе убраны многие лишние стрелки, которые можно легко получить из оставшихся. Образно говоря, диаграмма Хассе - это "каркас" системы. Этот "каркас" мы получаем в виде следующего сообщения: 
<pre>   ДИАГРАММА ХАССЕ СИСТЕМЫ:
         1 --> {2} 
        -1 --> {} 
         2 --> {-3} 
        -2 --> {-1} 
         3 --> {-2,-4} 
        -3 --> {} 
         4 --> {-3} 
        -4 --> {}</pre> 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Для удобства мы переставим при отображении диаграммы Хассе некоторые точки для того, чтобы эта диаграмма предстала перед нашим взором в виде непересекающихся цепочек, а все цепочки были направлены в одну сторону (рис. 3). 
<p>&nbsp;&nbsp;&nbsp;&nbsp;И, наконец, последнюю информацию, которая характеризует нашу систему, мы получим из следующего сообщения: 
<pre>   МИНИМАЛЬНОЕ МНОЖЕСТВО АКСИОМ СИСТЕМЫ:
        (из каждой пары посылок нужно выбрать любую одну) 
        1) 1 -->  2; -2 --> -1 
        2) 2 --> -3;  3 --> -2 
        3) 3 --> -4;  4 --> -3</pre> 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Здесь мы увидим, что число посылок в нашей системе не уменьшилось. Если мы выберем из каждой строки первые предложения, то получим в точности те посылки, которые и были нами введены. Но вполне возможны случаи, когда вначале вводятся "лишние" посылки, которые могут быть получены как следствия остальных. Так что этой возможностью программы пренебрегать не следует. 


<br><br><br>
<b><font size="+1">Пример 2. </font></b><p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Вспомним утверждение Сидорова о том, что все его друзья не скандалисты и дополним этим утверждением систему из примера 1. Тогда получим следующую систему исходных посылок: 
<ul>
        <li>1 --> {2,-4} 
        <li>2 --> {-3} 
        <li>3 --> {-4}. 
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Мы опустим все этапы анализа этой системы. В новой системе нет коллизий, и это вполне закономерно, так как мы ввели в нее новое предложение из множества "дополнительных" предложений. При проигрывании этой системы на машине стоит обратить внимание на то, что, во-первых, число "дополнительных" предложений существенно уменьшилось, а диаграмма Хассе системы изменилась (рис. 4). 




</BLOCKQUOTE><P>&nbsp;</TD><TD WIDTH="3%">&nbsp;</TD></TR></TABLE>





<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#82B496">
<TR><TD COLSPAN="2" align=center>&nbsp;<font size="+1" color=white>ПРИМЕРЫ СИСТЕМ С ПРОТИВОРЕЧИЕМ </font></TD></TR></TABLE>
<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#82B496">
<TR><TD WIDTH="3%">&nbsp;</TD>
<TD WIDTH="97%" BGCOLOR="#EFEFEF"><BLOCKQUOTE><P>&nbsp;<p>



<p>&nbsp;&nbsp;&nbsp;&nbsp;Вполне возможно, что найдется скептик, который задаст следующие вопросы: "А на каком основании мы получаем всю эту информацию о системе? Почему мы получаем именно эти следствия, а не другие?" Вкратце ответ такой: все исходные посылки и получаемые следствия мы записываем в виде включений множеств. Оказывается, в таком виде можно представить многие предложения естественного и научного языка. К таким предложениям относятся, в частности: 
<ol>
        <li> все типы Аристотелевской силлогистики; 
        <li> предложения, выраженные в форме определений терминов; 
        <li> условные предложения, выраженные в формах "Если X, то Y" или "событие Y есть необходимое условие существования события X". 
</ol>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Из этого далеко неполного перечня ясно, что область применения этой модели рассуждений весьма широка. С ее помощью можно выразить не только соотношения между точными математическими или техническими терминами, но и соотношения между понятиями, смысл которых, если их рассматривать изолированно, характеризуется большей или меньшей степенью неопределенности. Мы можем, например, не знать всех друзей Сидорова или однозначного определения скандалиста, но в предложении, которое сводится к соотношению включения между множествами, появляется точное математическое соотношение, которое мы просто обязаны использовать с максимальной отдачей. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Проблема лишь в том, чтобы выявить все аналитические возможности этой модели. Для решения этой проблемы необходимо выбрать подходящий математический аппарат. В качестве такого математического аппарата была выбрана строгая и точная математическая система, которая носит название "алгебра множеств". Это не совсем то, что известно под названием "теория множеств", но о различии и сходстве этих математических систем мы здесь говорить не будем. О них кое-что сказано в книге [1]. Сейчас готовится к публикации цикл работ, в которых эта проблема освещается более подробно. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Такой выбор математического аппарата однозначно определяет правила вывода и методы анализа системы, которые непосредственно следуют из законов алгебры множеств. Заодно в этой системе используются аналитические и алгоритмические возможности теории графов [2]. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Не вдаваясь в теоретические подробности, рассмотрим, какие правила вывода в ней используются. Этих правил всего три. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Первое правило - двойного отрицания (дополнения): для любого термина X справедливо -(-X)=X. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Второе правило - контрапозиции: предложение X --> Y равносильно предложению -Y --> -X. Например, если в системе есть предложение A1-->-A2, то в этой же системе должно быть и предложение -(-A2)-->-A1 или, если использовать первое правило, A2-->-A2. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Третье правило - транзитивности: если в системе имеются предложения X --> Y и Y --> Z, то предложение X --> Z также должно быть в этой системе. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Эти правила аналогичны числовым соотношениям, если стрелку понимать как отношение "меньше", а знак "-" понимать как просто "минус". Но это всего лишь аналогия. Например, для множеств вполне возможна истинность предложения A1 --> -A2 (A1 включено в дополнение A2). Для чисел же положительное число не может быть меньше отрицательного. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Расставив стрелки между терминами или их дополнениями, мы получаем в виде посылок точную математическую систему. Но мы не всегда можем сразу же правильно сформулировать эти посылки или дать точное и бесспорное определение некоторому термину. И это вполне закономерно - часто нам приходится иметь дело с системами, о которых нам мало что известно. Мы можем даже ошибиться в своих определениях и при этом получить вполне "приличную" систему без всяких видимых "неприятностей". Но в некоторых случаях можно все же с помощью программы получить вполне убедительные доказательства ошибочности наших посылок и попытаться привести их к более совершенному виду. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Первое, что мы можем сделать, это проверить адекватность исходной системы посылок. Возможны случаи, когда исходные посылки кажутся вполне правдоподобными, но когда мы перейдем к сопоставлению полученных следствий с реальностью, может оказаться так, что некоторые следствия противоречат этой реальности. Многочисленные примеры такого анализа традиционных взглядов о происхождении и развитии этносов можно найти в прекрасно написанных книгах Л.Н.Гумилева [3 и др.]. Заодно, читая их, можно значительно обогатить свое знание и понимание истории. Но мы рассмотрим этот аспект проверки на более простых примерах. 

<br><br><br>
<b><font size="+1">Пример 3. </font></b><p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Предположим, что наш предыдущий пример посмотрел Мешалкин, у которого брат собирается учиться на психолога, и обратил наше внимание на то, что третье предложение не научно: более правильным будет предложение "Все, не склонные скандалить, уверены в себе". В "машинном" варианте это означает, что нам нужно предложение 3 --> {-4} заменить на обратное ему -4 --> {3}. С учетом этого введем в машину следующие посылки: 
<pre>    1 --> {2,-4} 
         2 --> {-3} 
        -4 --> {3}. </pre>
<p>&nbsp;&nbsp;&nbsp;&nbsp;В ответ получим следующее сообщение: 
<pre>   "Система противоречива!
        Противоречивые пары: 1 --> -1" </pre>
        
<p>&nbsp;&nbsp;&nbsp;&nbsp;Получается, что множество друзей Сидорова включено в множество тех, кто не является его друзьями. Другими словами: все друзья Сидорова не его друзья. Можно поступить просто и считать, что у Сидорова нет друзей. Тогда весь наш "возможный мир" (или универсум) представлен теми, кто не относится к друзьям Сидорова. Тем самым мы должны исключить из системы всякое упоминание о друзьях Сидорова, то есть в нашем случае изъять из обращения первую посылку и заодно термины A1 и -A1. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Но можно попытаться откорректировать эту систему. Правда, в чем тут дело, пока не совсем понятно: то ли Сидоров плохо знает своих друзей, то ли Мешалкин, несмотря на свой солидный научный багаж, в чем-то все же неправ. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Можно попытаться сделать еще одну проверку этой системы: заменим категоричное высказывание о друзьях Сидорова 1 --> -4 на более осторожное 5 --> {1,-4} (некоторые друзья Сидорова не скандалисты). Оказывается, что и такая замена также не позволяет получить "нормальную" систему. Введем в машину посылки (не забывайте при этом, что число исходных "позитивных" терминов здесь будет уже не 4, а 5): 
<ol>
        <li>     1 --> {2} 
        <li>     5 --> {1,-4} 
        <li>     2 --> {-3} 
        <li>    -4 --> {3} 
</ol>
и получим сообщение о том, что система противоречива. Так что скорее всего здесь виноват Мешалкин. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;В последних примерах мы столкнулись с первой коллизией в рассуждениях - с противоречием. В этом случае система "настоятельно требует", чтобы мы убрали из нее некоторые множества или события как несуществующие. Но если мы уверены в существовании этих множеств или событий, то можно попытаться их "спасти", произведя некоторые коррективы в исходных посылках. Как раз такой анализ (правда, в менее формализованном виде) довольно часто встречается в упомянутых выше книгах Л.Н.Гумилева. Перейдем теперь к знакомству с другой коллизией. 


</BLOCKQUOTE><P>&nbsp;</TD></TR></TABLE>




<!-- --- --- -->
<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#82B496">
<TR><TD COLSPAN="2" align=center><font size="+1" color=white>ПРИМЕРЫ СИСТЕМ С ЦИКЛОМ </font></TD></TR></TABLE>
<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#82B496">
<TR><TD WIDTH="97%" BGCOLOR="#EFEFEF"><BLOCKQUOTE><P>&nbsp;<p>


<font size="+1"><b>Пример 4 </b></font><p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Пусть в закрытом ящике содержится неизвестное число предметов. Известно, что они различаются по форме (шар или кубик), по цвету (белый или красный) и по материалу (дерево или пластмасса). Известны также, следующие соотношения между признаками: 
<ul>
        <li> все шары красного цвета; 
        <li> все деревянные предметы белого цвета; 
        <li> все пластмассовые предметы шары. 
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Спрашивается, что нового можно узнать о предметах в ящике на основе этих сведений? 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Построим модель. Тут ясно, что "возможный мир" - это предметы в ящике. Поскольку признаки взаимоисключающие, то можно ввести следующие обозначения: A1 - шары, A2 - предметы белого цвета, A3 - пластмассовые предметы. Тогда -A1 - кубики, -A2 - предметы красного цвета, -A3 - предметы из дерева. "Машинный" вариант посылок тогда будет таким: 
<pre>
         1 -- > {-2}
        -3 --> {2} 
         3 --> {1}</pre> 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Теперь, если мы запустим программу и введем эти посылки, то получим следующий ответ: 
<p>&nbsp;&nbsp;&nbsp;&nbsp;В системе есть следующие множества равных терминов: 
<ul>
        <li>Множество 1: {1,-2,3} 
        <li>Множество 2: {-1,2,-3}. 
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp;В данном случае это означает, что в ящике может находиться лишь два класса предметов: красные пластмассовые шары и белые деревянные кубики. А получился такой вывод потому что на одном из этапов построения следствий в системе появились циклы 
1 --> -2 --> 3 --> 1 и -1 --> 2 --> -3 --> -1. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Если мы стрелку понимаем как отношение включения множеств, то наличие цикла говорит о том, что все множества, входящие в цикл, должны быть равны друг другу. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Спрашивается, почему ситуацию с циклом мы назвали коллизией - ведь в данном случае эта ситуация пошла только на пользу: распознаны эквивалентные множества? Но ведь и первая коллизия тоже может использоваться не только для критики, но для распознавания: если мы уверены в исходных посылках, а система утверждает, что некоторые множества нашей системы не существуют, то, может быть, в некоторых случаях более конструктивно согласиться с этим, чем изменять правдоподобные посылки. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Критический смысл коллизии цикла можно понять так: мы строим сложные умозаключения, предполагая, что все используемые в ней термины различны, а система говорит, что мы получили лишь то, что "масло масляное" и ничего больше. То есть тем самым мы распознали ситуацию, которая в логике называется "круг в доказательстве" и считается логической ошибкой. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Теперь становится более понятным смысл "дополнительных" предложений при проверке неполноты системы: при вводе любого "дополнительного" предложения в системе невозможны ни коллизия противоречия, ни коллизия цикла. Стоит отметить, что образцовые логические системы рассуждений характеризуются наименьшей мерой неполноты. С другой стороны, "рыхлые" системы с большим количеством "дырок" свидетельствуют о незавершенности логического анализа этой системы. 


</BLOCKQUOTE><P>&nbsp;</TD><TD WIDTH="3%">&nbsp;</TD></TR></TABLE>





<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#82B496">
<TR><TD COLSPAN="2" align=center>&nbsp;<font size="+1" color=white>ЗАКЛЮЧЕНИЕ</font></TD></TR></TABLE>
<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#82B496">
<TR><TD WIDTH="3%">&nbsp;</TD>
<TD WIDTH="97%" BGCOLOR="#EFEFEF"><BLOCKQUOTE><P>&nbsp;<p>


<p>&nbsp;&nbsp;&nbsp;&nbsp;Представленная в программе система моделирования и анализа рассуждений намного перекрывает силлогистику Аристотеля и к тому же в отличие от нее имеет строгое математическое обоснование. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;При сравнении ее с системами логического вывода на основе исчисления высказываний и предикатов оказывается, что эта система более проста по исполнению. В математической логике для того, чтобы осуществить логический вывод, необходимо представить множество исходных посылок P1, P2,..., Pn и предполагаемое следствие G. Тогда вывод производится как поиск ответа на вопрос "Является ли G следствием этих посылок?". 
<p>&nbsp;&nbsp;&nbsp;&nbsp;В предлагаемой системе предусматривается более простая постановка задачи логического вывода: нам не нужно предъявлять системе непонятно откуда взятое предполагаемое следствие - все возможные следствия система находит сама. И заодно позволяет легко проверить совместимость исходных посылок. И хотя структуры этой системы менее универсальны, чем структуры математической логики, она вполне подходит для решения многих и порой довольно сложных задач, связанных с детальным анализом естественных рассуждений, и при решении этих задач может успешно конкурировать с системами логического вывода, предусмотренными в математической логике. 


</BLOCKQUOTE><P>&nbsp;</TD></TR></TABLE>




<!-- --- --- -->
<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#82B496">
<TR><TD COLSPAN="2" align=center>&nbsp;<font size="+1" color=white>СПИСОК ЛИТЕРАТУРЫ </font></TD></TR></TABLE>
<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#82B496">
<TR><TD WIDTH="97%" BGCOLOR="#EFEFEF"><BLOCKQUOTE><P>&nbsp;<p>

<ol>
        <li> Кулик Б.А. Логические основы здравого смысла/под ред. Д.А.Поспелова. - СПб. Политехника, 1997. 
        <li> Кристофидес Н. Теория графов. Алгоритмический подход. - М.: Мир, 1978. 
        <li> Гумилев Л.Н. Этногенез и биосфера Земли. Л.: Гидрометеоиздат, 1990. 
</ol>

</BLOCKQUOTE><P>&nbsp;</TD><TD WIDTH="3%">&nbsp;</TD></TR></TABLE>





<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#82B496">
<TR><TD COLSPAN="2" align=center>&nbsp;<font size="+1" color=white>ОТ РЕДАКЦИИ </font></TD></TR></TABLE>
<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#82B496">
<TR><TD WIDTH="3%">&nbsp;</TD>
<TD WIDTH="97%" BGCOLOR="#EFEFEF"><BLOCKQUOTE><P>&nbsp;<p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;Редакция журнала объявляет конкурс на лучшую модель рассуждений, которую можно анализировать с помощью программы Б.А.Кулика. Тема рассуждений может быть самая разная - от соотношений между объектами математики до модели фантастической ситуации. Модель должна содержать не менее шести "позитивных" терминов и в окончательном, полученном после анализа виде быть полной или почти полной, то есть иметь при проверке неполноты малое число "дополнительных" предложений. Лучшие модели задач будут опубликованы в журнале. 

</BLOCKQUOTE><P>&nbsp;</TD></TR></TABLE>

















<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#82B496">
<TR><TD COLSPAN="2">&nbsp;</TD></TR></TABLE>
<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#82B496">
<TR>
<TD WIDTH="70%" BGCOLOR="#EFEFEF">
&nbsp;<p><BLOCKQUOTE><STRONG>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Кулик Борис Александрович,
<i>кандидат технических наук, сотудник Института проблем машиноведения РАН.</i>


</STRONG></BLOCKQUOTE><P>&nbsp;</TD>
<TD WIDTH="30%" ALIGN="CENTER" VALIGN="MIDDLE"><FONT COLOR="White" SIZE="+2"><EM>&nbsp;НАШИ&nbsp;АВТОРЫ&nbsp;</EM></FONT></TD></TR>
<TR><TD COLSPAN="2" ALIGN="CENTER" VALIGN="MIDDLE" BGCOLOR="#82B496">
<FONT SIZE="-1"><HR SIZE="1" NOSHADE>
[ <A HREF="index.htm">начало</A> ] [ <A HREF="http://www.aec.neva.ru/center/">ЦПО</A> ] [ <A HREF="mailto:pozdnkov@aec.neva.ru">e-mail</A> ] 
<HR SIZE="1" NOSHADE></FONT></TD></TR></TABLE>




</BODY>
</HTML>
